@using TaskStatus = Roles.Models.TaskStatus
@model TaskReadVM

<div class="row m-2">
    <div class="card container-fluid taskReady  @("task" + @Model.Task.Status.ToString())">
        <div class="card-body p-2">
            <div class="d-flex justify-content-center">
                @*<small class="mx-1 pt-1">@Model.Task.Id</small>*@
                <h5 class="card-title mx-1">@Model.Task.Summary</h5>
            </div>
            <div class="d-flex justify-content-between">
                @if (Model.Task.Status != @TaskStatus.Done)
                {
                    <div class="align-self-center">
                        <form asp-action="MoveTaskBack" method="post">
                            <input name="id" type="hidden" value="@Model.Task.Id" />
                            <button class="link-button">
                                <i class="align-self-center cursor-pointer text-dark"><strong>Back</strong></i>
                            </button>
                        </form>
                    </div> }
                else
                {
                    <i class="align-self-center text-muted">Back</i>}

                <p class="card-text">@Model.Task.Description</p>

                @if (Model.Task.Status != @TaskStatus.Done)
                {
                    <div class="align-self-center">
                        <form asp-action="AdvanceTask" method="post">
                            <input name="id" type="hidden" value="@Model.Task.Id" />
                            <button class="link-button">
                                <i class="align-self-center cursor-pointer text-dark"><strong>>></strong></i>
                            </button>
                        </form>
                    </div> }
                else
                {
                    <i class="align-self-center text-muted">>></i>}
            </div>

            <div class="card-body p-2 d-flex justify-content-center">
                <div class="mx-1">@Model.Assignee</div>
                <div class="mx-1">
                    <span class="badge badge-pill badge-secondary">@Model.Task.StoryPoints</span>
                </div>
                <div class="mx-1 rounded bg-danger cursor-pointer">
                    @{ var routeData = new Dictionary<string, string> { { "returnUrl", @Context.Request.Path } }; }
                    <a asp-controller="Tasks" asp-action="Delete" asp-all-route-data="routeData" asp-route-id="@Model.Task.Id">
                        <i class="p-1 text-white">Delete</i>
                    </a>
                </div>
                <div class="mx-1 rounded bg-success cursor-pointer">
                    <a asp-controller="Tasks" asp-action="Edit" asp-all-route-data="routeData" asp-route-id="@Model.Task.Id">
                        <i class="p-1 text-white">Edit</i>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>